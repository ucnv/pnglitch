#!/usr/bin/env ruby
# frozen_string_literal: true
require 'optparse'
require 'pnglitch'

program_name = File.basename($PROGRAM_NAME)
usage = <<USAGE
Usage:
  #{program_name} <infile> [--filter=<n>] <outfile>

Options:
  -f, --filter=<n>  Fix all filter types as passed value before glitching.
                    A number (0..4) or a type name (none|sub|up|average|paeth).
  --version         Show version.
  -h, --help        Show this screen.

USAGE

filter = nil

ARGV.options do |o|
  o.program_name = program_name
  o.on('-f', '--filter=N', String)  do |n|
    filter = PNGlitch::Filter.guess n
  end

  o.on_tail('--version') do
    puts PNGlitch::VERSION
    exit
  end

  o.on_tail('-h', '--help') do
    puts usage
    exit
  end

  o.parse!
end

begin
  raise 'Wrong options' if ARGV.size < 2
  infile, outfile = ARGV
  PNGlitch.open infile do |png|
    png.change_all_filters filter unless filter.nil?
    png.glitch do |data|
      data.gsub /\d/, 'x'
    end
    png.save outfile
  end
rescue => e
  puts e.message
  puts
  puts usage
end
